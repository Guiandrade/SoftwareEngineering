package pt.tecnico.mydrive.domain;

class MyDrive{
  int fileCounter;
}

class User{
  String userId;
  String userName;
  String password;
  String userPermissionsMask;
  String homeDir;
}

class SuperUser extends User;

class Guest extends User;

class File {
  String link;
  int fileId;
  String name;
  String filePermissionMask;
  String path;
  DateTime lastEditDate;
}

class Login{
  long token;
  DateTime timeout; 
}

class EnvironmentVariable{
  String name;
  String value;
}

class PlainFile extends File{
  String fileContent;
}

class Directory extends File;

class App extends PlainFile;

class Link extends PlainFile;

relation DomainRootHasMydriveApplication {
  .pt.ist.fenixframework.DomainRoot playsRole root {
    multiplicity 0..1;
  }
  MyDrive playsRole myDrive {
    multiplicity 0..1;    
  }
}

relation MyDriveContainsLogin{
  MyDrive playsRole mydrive;
  Login playsRole login{
    multiplicity *;
  }
}

relation MyDriveContainFiles {
  MyDrive playsRole mydrive {
    multiplicity 1;
  }
  File playsRole file {
  multiplicity *;
  }
}

relation myDriveContainsRootDirectory{
  MyDrive playsRole myDriveRoot{
    multiplicity 1;
  }
  Directory playsRole rootDirectory{
    multiplicity 0..*;
  }
}

relation myDriveContainsUsers{
  MyDrive playsRole myDrive{
    multiplicity 1;
  }
  User playsRole user{
    multiplicity *;
  }
}

relation UsersContainsFiles{
  User playsRole user{
    multiplicity 1;
  }
  File playsRole file{
    multiplicity 1..*;
  }
  
}

relation DirectoryContainsFiles{
  Directory playsRole directory{
  multiplicity 1;
  }
  File playsRole file{
    multiplicity 0..*;
  } 
}

relation UsersContainsLogin {
  User playsRole users{
    multiplicity 1;
  }
  Login playsRole login{
    multiplicity 0..*;
  }
}

relation LoginHasDirectory{
  Login playsRole login{
    multiplicity 0..*;
  }
  Directory playsRole directory{
    multiplicity 1;
  }
}


relation LoginContainsEnvironmentVariable{
	Login playsRole login;
	EnvironmentVariable playsRole environmentVar{
		multiplicity *;	
	}
}





